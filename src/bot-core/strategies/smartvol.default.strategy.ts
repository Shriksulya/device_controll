import { Strategy } from '../interfaces';
import { toBitgetSymbolId } from '../utils';
import { PositionsStore } from '../positions.store';
import { VolumeUpService } from '../../services/volume-up.service';
import { Logger } from '@nestjs/common';

export class SmartVolDefaultStrategy implements Strategy {
  private readonly logger = new Logger(SmartVolDefaultStrategy.name);

  constructor(
    private readonly store: PositionsStore,
    private readonly volumeUpService: VolumeUpService,
  ) {}

  async onOpen(bot, alert) {
    this.logger.log(`üöÄ –°—Ç—Ä–∞—Ç–µ–≥–∏—è onOpen –¥–ª—è ${alert.symbol} @${alert.price}`);

    if (bot.mustCheckTrend()) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π —Ç–∞–π–º—Ñ—Ä–µ–π–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–Ω–¥–∞
      const trendTimeframe = bot.cfg.timeframe_trend[0];
      this.logger.log(
        `üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ç—Ä–µ–Ω–¥ –¥–ª—è ${alert.symbol} –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º—É —Ç—Ä–µ–Ω–¥–∞: ${trendTimeframe}`,
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–Ω–¥ —Ç–æ–ª—å–∫–æ –ø–æ –ø–µ—Ä–≤–æ–º—É —Ç–∞–π–º—Ñ—Ä–µ–π–º—É
      const trendDirection = await bot.trend.getCurrent(
        alert.symbol,
        trendTimeframe,
      );

      this.logger.log(
        `üìä –¢—Ä–µ–Ω–¥ –¥–ª—è ${alert.symbol} –ø–æ ${trendTimeframe}: ${trendDirection}, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞: ${bot.cfg.direction}`,
      );

      if (trendDirection !== bot.cfg.direction) {
        this.logger.log(`‚è∏ –¢—Ä–µ–Ω–¥ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞—é`);
        // –ú–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º - –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        return;
      }
      this.logger.log(`‚úÖ –¢—Ä–µ–Ω–¥ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞—é`);
    }
    this.logger.log(`üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è ${alert.symbol}`);
    const existing = await this.store.findOpen(bot.name, alert.symbol);
    if (existing) {
      this.logger.log(
        `üìä –ù–∞–π–¥–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ø–æ–∑–∏—Ü–∏—è: ${existing.fillsCount}/${bot.cfg.maxFills ?? 4} –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–π`,
      );
      if (existing.fillsCount >= (bot.cfg.maxFills ?? 4)) {
        this.logger.log(`‚ö†Ô∏è –î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–π`);
        await bot.notify(
          `‚ö†Ô∏è ${bot.name}: max fills reached for ${alert.symbol}`,
        );
        return;
      }
      this.logger.log(`‚ûï –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–æ–∫—É–ø–∫–µ`);
      return this.onAdd(bot, alert); // —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞ ‚Üí –¥–æ–∫—É–ø–∫–∞
    }
    this.logger.log(`üÜï –ü–æ–∑–∏—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—Ç–∫—Ä—ã–≤–∞—é –Ω–æ–≤—É—é`);

    const symbolId = toBitgetSymbolId(alert.symbol);
    this.logger.log(`üîß –°–∏–º–≤–æ–ª –¥–ª—è –±–∏—Ä–∂–∏: ${symbolId}`);

    if (bot.exchange.isAllowed && !bot.exchange.isAllowed(symbolId)) {
      this.logger.log(`‚ùå –°–∏–º–≤–æ–ª ${symbolId} –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω`);
      await bot.notify(`‚ö†Ô∏è ${bot.name}: ${symbolId} not allowed`);
      return;
    }
    this.logger.log(`‚úÖ –°–∏–º–≤–æ–ª ${symbolId} —Ä–∞–∑—Ä–µ—à–µ–Ω`);
    this.logger.log(`‚öôÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–ª–µ—á–æ: ${bot.cfg.smartvol.leverage}`);
    await bot.exchange.ensureLeverage?.(
      symbolId,
      String(bot.cfg.smartvol.leverage),
    );

    this.logger.log(`üí∞ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—é —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è $${bot.baseUsd()}`);
    const size = await bot.exchange.calcSizeFromUsd?.(
      symbolId,
      Number(alert.price),
      bot.baseUsd(),
    );
    this.logger.log(`üìä –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: ${size}`);

    this.logger.log(`üìà –†–∞–∑–º–µ—â–∞—é —Ä—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä`);
    await bot.exchange.placeMarket?.(
      symbolId,
      'buy',
      String(size),
      `${bot.name}-open-${Date.now()}`,
    );
    const baseUsd = bot.baseUsd();
    if (!baseUsd || isNaN(baseUsd)) {
      this.logger.error(
        `‚ùå –û—à–∏–±–∫–∞: baseUsd –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º: ${baseUsd}`,
      );
      await bot.notify(
        `‚ùå ${bot.name}: –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - baseUsd –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω`,
      );
      return;
    }

    this.logger.log(
      `üíæ –°–æ–∑–¥–∞—é –ø–æ–∑–∏—Ü–∏—é –≤ –ë–î: ${bot.name}, ${alert.symbol}, ${alert.price}, $${baseUsd}`,
    );
    const position = await this.store.open(
      bot.name,
      alert.symbol,
      alert.price,
      String(baseUsd),
    );
    this.logger.log(`‚úÖ –ü–æ–∑–∏—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ –ë–î —Å ID: ${position.id}`);

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏
    const positionInfo = this.store.getPositionInfo(
      position,
      Number(alert.price),
    );

    await bot.notify(
      `‚úÖ ${bot.name}: OPEN ${alert.symbol} @${alert.price} $${baseUsd}\n` +
        `üìä –†–∞–∑–º–µ—Ä: ${positionInfo.pnl?.totalSize || '0'} ${alert.symbol.replace('USDT', '')}\n` +
        `üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: $${positionInfo.pnl?.avgEntryPrice || alert.price}\n` +
        `üìà –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: $${positionInfo.pnl?.currentPrice || alert.price}\n` +
        `üíµ PnL: $${positionInfo.pnl?.pnl || '0'} (${positionInfo.pnl?.pnlPercent || '0'}%)`,
    );
  }

  async onAdd(bot, alert) {
    this.logger.log(`‚ûï –°—Ç—Ä–∞—Ç–µ–≥–∏—è onAdd –¥–ª—è ${alert.symbol} @${alert.price}`);

    if (bot.mustCheckTrend()) {
      this.logger.log(
        `üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ç—Ä–µ–Ω–¥ –¥–ª—è –¥–æ–∫—É–ø–∫–∏ ${alert.symbol} –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º: ${bot.cfg.timeframe_trend.join(',')}`,
      );

      // –î–ª—è –¥–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥—É—é –ø—Ä–æ–≤–µ—Ä–∫—É - –≤—Å–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å
      const canAdd = await bot.canAddPosition(alert.symbol);
      const mainTimeframe = bot.getMainTimeframe();

      this.logger.log(
        `üìä –ú–æ–∂–Ω–æ –¥–æ–∫—É–ø–∞—Ç—å ${alert.symbol}: ${canAdd}, –≥–ª–∞–≤–Ω—ã–π —Ç–∞–π–º—Ñ—Ä–µ–π–º: ${mainTimeframe}`,
      );

      if (!canAdd) {
        this.logger.log(
          `‚è∏ –î–æ–∫—É–ø–∫–∞ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ - —Ç—Ä–µ–Ω–¥—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç –ø–æ –≤—Å–µ–º —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º`,
        );
        await bot.notify(
          `‚è∏ ${bot.name}: –¥–æ–∫—É–ø–∫–∞ ${alert.symbol} –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ - —Ç—Ä–µ–Ω–¥—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç –ø–æ –≤—Å–µ–º —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º (${bot.cfg.timeframe_trend.join(',')})`,
        );
        return;
      }
      this.logger.log(`‚úÖ –î–æ–∫—É–ø–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞—é`);
    }

    const existing = await this.store.findOpen(bot.name, alert.symbol);
    if (!existing) {
      this.logger.log(
        `‚ö†Ô∏è –ü–æ–∑–∏—Ü–∏—è ${alert.symbol} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î –¥–ª—è –±–æ—Ç–∞ ${bot.name}, –ø—Ä–æ–ø—É—Å–∫–∞—é –¥–æ–∫—É–ø–∫—É`,
      );
      return; // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    }

    if (existing.fillsCount >= (bot.cfg.maxFills ?? 4)) {
      await bot.notify(`‚ö†Ô∏è ${bot.name}: max fills reached for ${alert.symbol}`);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–Ω–¥ –ø—Ä–∏ –¥–æ–∫—É–ø–∫–µ
    if (bot.mustCheckTrend()) {
      this.logger.log(
        `üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ç—Ä–µ–Ω–¥ –¥–ª—è –¥–æ–∫—É–ø–∫–∏ ${alert.symbol} –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º: ${bot.cfg.timeframe_trend.join(',')}`,
      );
      const trendDirection = await bot.trendAgrees(alert.symbol);
      this.logger.log(
        `üìä –¢—Ä–µ–Ω–¥ –¥–ª—è –¥–æ–∫—É–ø–∫–∏ ${alert.symbol}: ${trendDirection}, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞: ${bot.cfg.direction}`,
      );

      if (trendDirection !== bot.cfg.direction) {
        this.logger.log(`‚è∏ –¢—Ä–µ–Ω–¥ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ø—Ä–∏ –¥–æ–∫—É–ø–∫–µ, –ø—Ä–æ–ø—É—Å–∫–∞—é`);
        await bot.notify(
          `‚è∏ ${bot.name}: —Ç—Ä–µ–Ω–¥ ${trendDirection} –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ ${bot.cfg.direction} –ø—Ä–∏ –¥–æ–∫—É–ø–∫–µ (${bot.cfg.timeframe_trend.join(',')})`,
        );
        return;
      }
      this.logger.log(`‚úÖ –¢—Ä–µ–Ω–¥ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ø—Ä–∏ –¥–æ–∫—É–ø–∫–µ, –ø—Ä–æ–¥–æ–ª–∂–∞—é`);
    }

    const addUsd = bot.addUsd();
    if (!addUsd || isNaN(addUsd)) {
      this.logger.error(
        `‚ùå –û—à–∏–±–∫–∞: addUsd –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º: ${addUsd}`,
      );
      await bot.notify(
        `‚ùå ${bot.name}: –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - addUsd –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω`,
      );
      return;
    }

    const symbolId = toBitgetSymbolId(alert.symbol);
    const size = await bot.exchange.calcSizeFromUsd?.(
      symbolId,
      Number(alert.price),
      addUsd,
    );
    await bot.exchange.placeMarket?.(
      symbolId,
      'buy',
      String(size),
      `${bot.name}-add-${Date.now()}`,
    );
    await this.store.add(existing, alert.price, String(addUsd));

    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏
    const updatedPosition = await this.store.findOpen(bot.name, alert.symbol);
    if (updatedPosition) {
      const positionInfo = this.store.getPositionInfo(
        updatedPosition,
        Number(alert.price),
      );

      await bot.notify(
        `‚ûï ${bot.name}: ADD ${alert.symbol} @${alert.price} $${addUsd}\n` +
          `üìä –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä: ${positionInfo.pnl?.totalSize || '0'} ${alert.symbol.replace('USDT', '')}\n` +
          `üí∞ –ù–æ–≤–∞—è —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: $${positionInfo.pnl?.avgEntryPrice || alert.price}\n` +
          `üìà –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${positionInfo.pnl?.currentPrice || alert.price}\n` +
          `üíµ PnL: $${positionInfo.pnl?.pnl || '0'} (${positionInfo.pnl?.pnlPercent || '0'}%)`,
      );
    } else {
      await bot.notify(
        `‚ûï ${bot.name}: ADD ${alert.symbol} @${alert.price} $${addUsd}`,
      );
    }
  }

  async onClose(bot, alert) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ –ë–î –ø–µ—Ä–µ–¥ –ø–æ–ø—ã—Ç–∫–æ–π –∑–∞–∫—Ä—ã—Ç–∏—è
    const existing = await this.store.findOpen(bot.name, alert.symbol);
    if (!existing) {
      this.logger.log(
        `‚ö†Ô∏è –ü–æ–∑–∏—Ü–∏—è ${alert.symbol} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î –¥–ª—è –±–æ—Ç–∞ ${bot.name}, –ø—Ä–æ–ø—É—Å–∫–∞—é –∑–∞–∫—Ä—ã—Ç–∏–µ`,
      );
      return; // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Volume Up –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeState = this.volumeUpService.getCloseState(
      alert.symbol,
      bot.name,
    );

    if (!closeState) {
      // –ü–µ—Ä–≤—ã–π SmartVolClose - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
      this.logger.log(
        `üöÄ –ü–µ—Ä–≤—ã–π SmartVolClose –¥–ª—è ${alert.symbol} (${bot.name}) - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é –æ–∂–∏–¥–∞–Ω–∏–µ VolumeUp`,
      );

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π VolumeUp –¥–ª—è —ç—Ç–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ (–±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ç–∞–π–º—Ñ—Ä–µ–π–º)
      const volumeData = this.volumeUpService.getVolumeUpBySymbol(alert.symbol);
      if (volumeData.length > 0) {
        const initialVolume = volumeData[0].volume;
        this.volumeUpService.initCloseState(
          alert.symbol,
          bot.name,
          initialVolume,
        );

        this.logger.log(
          `üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–ª—è ${alert.symbol} —Å VolumeUp: ${initialVolume}`,
        );

        await bot.notify(
          `‚è≥ ${bot.name}: –û–∂–∏–¥–∞—é VolumeUp –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è ${alert.symbol} (—Ç–µ–∫—É—â–∏–π: ${initialVolume}, –Ω—É–∂–Ω–æ: ‚â•19)`,
        );
        return; // –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º, –∂–¥–µ–º VolumeUp
      } else {
        this.logger.log(
          `‚ö†Ô∏è VolumeUp –¥–∞–Ω–Ω—ã–µ –¥–ª—è ${alert.symbol} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∑–∞–∫—Ä—ã–≤–∞—é –ø–æ–∑–∏—Ü–∏—é`,
        );
        // –ï—Å–ª–∏ –Ω–µ—Ç VolumeUp –¥–∞–Ω–Ω—ã—Ö, –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
      }
    } else {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å
      if (this.volumeUpService.canClosePosition(alert.symbol, bot.name)) {
        this.logger.log(
          `‚úÖ VolumeUp ${closeState.currentVolume} >= 19 –¥–ª—è ${alert.symbol} (${bot.name}) - –∑–∞–∫—Ä—ã–≤–∞—é –ø–æ–∑–∏—Ü–∏—é!`,
        );

        await bot.notify(
          `‚úÖ ${bot.name}: VolumeUp ${closeState.currentVolume} >= 19, –∑–∞–∫—Ä—ã–≤–∞—é –ø–æ–∑–∏—Ü–∏—é ${alert.symbol}`,
        );

        // –ü–æ–º–µ—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∫–∞–∫ –∑–∞–∫—Ä—ã—Ç—É—é –≤ VolumeUpService
        this.volumeUpService.markPositionClosed(alert.symbol, bot.name);
      } else {
        this.logger.log(
          `‚è≥ VolumeUp ${closeState.currentVolume} < 19 –¥–ª—è ${alert.symbol} (${bot.name}) - –ø—Ä–æ–¥–æ–ª–∂–∞—é –∂–¥–∞—Ç—å`,
        );

        await bot.notify(
          `‚è≥ ${bot.name}: VolumeUp ${closeState.currentVolume} < 19, –ø—Ä–æ–¥–æ–ª–∂–∞—é –∂–¥–∞—Ç—å –¥–ª—è ${alert.symbol}`,
        );
        return; // –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∂–¥–∞—Ç—å
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–Ω–¥ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å —É—á–µ—Ç–æ–º –∏–µ—Ä–∞—Ä—Ö–∏–∏
    if (bot.mustCheckTrend()) {
      this.logger.log(
        `üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ç—Ä–µ–Ω–¥ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è ${alert.symbol} –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º: ${bot.cfg.timeframe_trend.join(',')}`,
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é (–≥–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ —Ä–∞–∑–≤–µ—Ä–Ω—É–ª—Å—è)
      const shouldClose = await bot.shouldClosePosition(alert.symbol);
      const mainTimeframe = bot.getMainTimeframe();

      this.logger.log(
        `üìä –ù—É–∂–Ω–æ –∑–∞–∫—Ä—ã–≤–∞—Ç—å ${alert.symbol}: ${shouldClose}, –≥–ª–∞–≤–Ω—ã–π —Ç–∞–π–º—Ñ—Ä–µ–π–º: ${mainTimeframe}, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞: ${bot.cfg.direction}`,
      );

      if (shouldClose) {
        this.logger.log(`üîÑ –ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ —Ä–∞–∑–≤–µ—Ä–Ω—É–ª—Å—è, –∑–∞–∫—Ä—ã–≤–∞—é –ø–æ–∑–∏—Ü–∏—é`);
        await bot.notify(
          `üîÑ ${bot.name}: –≥–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ (${mainTimeframe}) —Ä–∞–∑–≤–µ—Ä–Ω—É–ª—Å—è, –∑–∞–∫—Ä—ã–≤–∞—é –ø–æ–∑–∏—Ü–∏—é ${alert.symbol}`,
        );
      } else {
        this.logger.log(
          `‚úÖ –ì–ª–∞–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –Ω–æ –∑–∞–∫—Ä—ã–≤–∞—é –ø–æ —Å–∏–≥–Ω–∞–ª—É`,
        );
      }
    }

    this.logger.log(
      `üîç –ù–∞–π–¥–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏—è ${alert.symbol} –≤ –ë–î, –∑–∞–∫—Ä—ã–≤–∞—é –Ω–∞ –±–∏—Ä–∂–µ`,
    );

    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–∫—Ä—ã—Ç—å –ø–æ–∑–∏—Ü–∏—é –Ω–∞ –±–∏—Ä–∂–µ
      await bot.exchange.flashClose?.(alert.symbol, 'long');

      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π PnL –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
      const finalPnL = this.store.calculatePnL(existing, Number(alert.price));
      await this.store.close(existing, alert.price);

      await bot.notify(
        `üõë ${bot.name}: CLOSE ${alert.symbol} @${alert.price}\n` +
          `üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${finalPnL.totalSize} ${alert.symbol.replace('USDT', '')}\n` +
          `üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞: $${finalPnL.avgEntryPrice}\n` +
          `üìà –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: $${finalPnL.currentPrice}\n` +
          `üíµ –§–∏–Ω–∞–ª—å–Ω—ã–π PnL: $${finalPnL.pnl} (${finalPnL.pnlPercent}%)`,
      );
    } catch (error) {
      this.logger.error(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø–æ–∑–∏—Ü–∏–∏ ${alert.symbol}: ${error.message}`,
      );

      // –ï—Å–ª–∏ –ø–æ–∑–∏—Ü–∏—è —É–∂–µ –∑–∞–∫—Ä—ã—Ç–∞ –Ω–∞ –±–∏—Ä–∂–µ, –Ω–æ –Ω–µ –≤ –ë–î - –∑–∞–∫—Ä—ã–≤–∞–µ–º –≤ –ë–î
      if (
        error.message?.includes('no position to close') ||
        error.message?.includes('22002')
      ) {
        this.logger.log(
          `‚ÑπÔ∏è –ü–æ–∑–∏—Ü–∏—è ${alert.symbol} —É–∂–µ –∑–∞–∫—Ä—ã—Ç–∞ –Ω–∞ –±–∏—Ä–∂–µ, –æ–±–Ω–æ–≤–ª—è—é –ë–î`,
        );
        await this.store.close(existing, alert.price);
        await bot.notify(
          `‚ÑπÔ∏è ${bot.name}: –ø–æ–∑–∏—Ü–∏—è ${alert.symbol} —É–∂–µ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞ –Ω–∞ –±–∏—Ä–∂–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ –ë–î`,
        );
      } else {
        // –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ - —É–≤–µ–¥–æ–º–ª—è–µ–º –æ–± –æ—à–∏–±–∫–µ
        await bot.notify(
          `‚ùå ${bot.name}: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø–æ–∑–∏—Ü–∏–∏ ${alert.symbol}: ${error.message}`,
        );
        throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
      }
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è SmartVolumeOpen (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏)
  async onSmartVolumeOpen(bot, alert) {
    this.logger.log(`üìä SmartVolumeOpen –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏`);
    // –ú–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º - –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è BullishVolume (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏)
  async onBullishVolume(bot, alert) {
    this.logger.log(`üêÇ BullishVolume –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏`);
    // –ú–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º - –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è VolumeUp (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏)
  async onVolumeUp(bot, alert) {
    this.logger.log(`üìä VolumeUp –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏`);
    // –ú–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º - –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è TrendPivot —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ SmartVol Default)
  async onLongTrend(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onShortTrend(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onLongPivotPoint(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onShortPivotPoint(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onStrongLongPivotPoint(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onStrongShortPivotPoint(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onBigClose(bot, alert) {
    this.logger.log(
      `üö® SmartBigClose –¥–ª—è ${alert.symbol} - —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ–π –ø–æ–∑–∏—Ü–∏–∏`,
    );

    const existing = await this.store.findOpen(bot.name, alert.symbol);
    if (!existing) {
      this.logger.log(
        `‚ö†Ô∏è –ü–æ–∑–∏—Ü–∏—è ${alert.symbol} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î –¥–ª—è –±–æ—Ç–∞ ${bot.name}, –ø—Ä–æ–ø—É—Å–∫–∞—é –∑–∞–∫—Ä—ã—Ç–∏–µ`,
      );
      return;
    }

    try {
      await bot.exchange.flashClose?.(alert.symbol, 'long');
      const finalPnL = this.store.calculatePnL(existing, Number(alert.price));
      await this.store.close(existing, alert.price);

      await bot.notify(
        `üö® ${bot.name}: BIG CLOSE ${alert.symbol} @${alert.price}\n` +
          `üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${finalPnL.totalSize} ${alert.symbol.replace('USDT', '')}\n` +
          `üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞: $${finalPnL.avgEntryPrice}\n` +
          `üìà –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: $${finalPnL.currentPrice}\n` +
          `üíµ –§–∏–Ω–∞–ª—å–Ω—ã–π PnL: $${finalPnL.pnl} (${finalPnL.pnlPercent}%)`,
      );
    } catch (error) {
      this.logger.error(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø–æ–∑–∏—Ü–∏–∏ ${alert.symbol}: ${error.message}`,
      );
      throw error;
    }
  }

  async onBigAdd(bot, alert) {
    this.logger.log(`üöÄ SmartBigAdd –¥–ª—è ${alert.symbol} - –±–æ–ª—å—à–∞—è –¥–æ–∫—É–ø–∫–∞`);

    // –õ–æ–≥–∏–∫–∞ –¥–ª—è SmartBigAdd (–º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
    await bot.notify(
      `üöÄ ${bot.name}: BIG ADD —Å–∏–≥–Ω–∞–ª –¥–ª—è ${alert.symbol} @${alert.price}`,
    );
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è ThreeAlerts —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ SmartVol Default)
  async onBullRelsi(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onBearRelsi(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onBullMarubozu(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onBearMarubozu(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onIstinoeBullPogloshenie(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }

  async onIstinoeBearPogloshenie(bot: any, alert: any): Promise<void> {
    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ SmartVol Default —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  }
}
